# This is a basic workflow to help you get started with Actions

name: thebitbeta

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the development branch and master branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    steps:

      # Install and Test module
      - uses: actions/checkout@v2
      - name: test auth_service
        uses: actions/setup-node@v2
        with:
          node-version: "lts/gallium"
          cache: "npm"
          cache-dependency-path: '**/package-lock.json'
      - name: Run with npm
        working-directory: ./src/auth_service
        run: |
          npm install
          npm run test

      - uses: actions/checkout@v2
      - name: test api_gateway
        uses: actions/setup-node@v2
        with:
          node-version: "lts/gallium"
          cache: "npm"
          cache-dependency-path: '**/package-lock.json'
      - name: Run with npm
        working-directory: ./src/api_gateway
        run: |
          npm install
          npm run test

      - uses: actions/checkout@v2
      - name: test dashboard_service
        uses: actions/setup-node@v2
        with:
          node-version: "lts/gallium"
          cache: "npm"
          cache-dependency-path: '**/package-lock.json'
      - name: Run with npm
        working-directory: ./src/dashboard_service
        run: |
          npm install
          npm run test

      - uses: actions/checkout@v2
      - name: Use Node.js LTS Gallium
        uses: actions/setup-node@v2
        with:
          node-version: "lts/gallium"
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Build Web-App module
        working-directory: ./src/frontend
        run: |
          npm ci
          CI="" npm run build --if-present
